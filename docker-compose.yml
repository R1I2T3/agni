version: "3.9"

services:
  agni-backend:
    build:
      context: .
    container_name: agni-backend
    ports:
      - "8080:8080"
    env_file:
      - .env
    volumes:
      - .:/app
    depends_on:
      agni-mysql:
        condition: service_healthy
      agni-redis:
        condition: service_started
    restart: unless-stopped
    networks:
      - agni-network

  agni-frontend:
    image: node:22-alpine3.20
    container_name: agni-frontend
    working_dir: /web
    ports:
      - "3000:3000"
    volumes:
      - ./web:/web
      - /web/node_modules
    command: sh -c "npm install && npm run dev -- --host 0.0.0.0"
    depends_on:
      - agni-backend
    restart: unless-stopped
    networks:
      - agni-network

  agni-redis:
    image: redis
    container_name: agni-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - agni-network
    command: redis-server --appendonly yes

  agni-mysql:
    image: mysql
    container_name: agni-mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - agni-network

  # InApp microservice
  agni-inapp:
    build:
      context: .
      dockerfile: cmd/inapp/dockerfile.dev
    container_name: agni-inapp
    ports:
      - "4000:4000"
    env_file:
      - .env
    environment:
      - REDIS_ADDR=agni-redis:6379
      - INAPP_PORT=4000
    volumes:
      - .:/app:delegated       # mount repo so edits are visible to air
      - /app/tmp               # persisted build binary location inside container
    depends_on:
      - agni-redis
    networks:
      - agni-network

volumes:
  redis_data:
  mysql_data:

networks:
  agni-network:
    driver: bridge
